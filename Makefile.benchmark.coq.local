EXTRACTED_HS_FILES := \
  benchmark/haskell/MergesortCoqCbn.hs \
  benchmark/haskell/MergesortCoqCbnAcc.hs \
  benchmark/haskell/MergesortCoqCbv.hs \
  benchmark/haskell/MergesortCoqCbvAcc.hs

EXTRACTED_ML_FILES := benchmark/ocaml/mergesort_coq.ml

HS_FILES := $(EXTRACTED_HS_FILES) benchmark/haskell/Benchmark.hs

ML_FILES := $(EXTRACTED_ML_FILES) benchmark/ocaml/benchmark.ml

EXTRACTED_BINARIES := \
  benchmark/haskell/Benchmark \
  benchmark/ocaml/benchmark.native

benchmark/haskell/Benchmark: $(HS_FILES)
	cd benchmark/haskell && \
	  stack ghc Benchmark.hs -- -with-rtsopts="-T -I0 -A8G -G1 -m1" -O2

benchmark/ocaml/benchmark.native: $(ML_FILES)
	cd benchmark/ocaml && \
	  ocamlbuild benchmark.native -package unix -tag 'optimize(3)'

$(EXTRACTED_HS_FILES) $(EXTRACTED_ML_FILES): benchmark/extraction.vo

post-all:: $(EXTRACTED_BINARIES)

clean::
	$(HIDE)rm -f $(EXTRACTED_HS_FILES)
	$(HIDE)rm -f $(HS_FILES:.hs=.hi)
	$(HIDE)rm -f $(HS_FILES:.hs=.o)
	$(HIDE)rm -f $(EXTRACTED_ML_FILES)
	$(HIDE)rm -f $(EXTRACTED_ML_FILES:.ml=.mli)
	$(HIDE)rm -f $(EXTRACTED_BINARIES)
